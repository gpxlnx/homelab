apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry-metrics-collector
  namespace: {{ .Values.namespace.values.namespace.name }}
spec:
  mode: statefulset
  targetAllocator:
    enabled: true
    serviceAccount: opentelemetry-metrics-collector-targetallocator
    prometheusCR:
      enabled: true
  ports:
    - port: 4317
      appProtocol: grpc
      name: otlp-grpc
      targetPort: otlp-grpc  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  config: |
    receivers:
      otlp:
        protocols:
          grpc:

      prometheus:
        config:
          scrape_configs:
          - job_name: 'opentelemetry-metrics-collector'
            scrape_interval: 10s
            static_configs:
            - targets: [ '0.0.0.0:8888' ]

    extensions:
      health_check:
      zpages:
        endpoint: localhost:55679
      pprof:
        endpoint: localhost:1777

    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 20

    exporters:
      debug:
      prometheusremotewrite:
        endpoint: "http://thanos-receive.observability.svc.cluster.local:19291/api/v1/receive"
        tls:
          insecure: true

    service:
      telemetry:
        logs:
          level: "info"
        metrics:
          address: ${MY_POD_IP}:8888
      extensions:
        - zpages
        - pprof
        - health_check
      pipelines:
        metrics:
          receivers: 
            - prometheus
          processors: [memory_limiter, batch]
          exporters:
            - prometheusremotewrite