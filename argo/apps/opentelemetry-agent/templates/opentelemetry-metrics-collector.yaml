apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: opentelemetry-agent
  namespace: {{ .Values.namespace.values.namespace.name }}
spec:
  mode: daemonset
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "200m"
  env:
    - name: NODE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name : OTEL_RESOURCE_ATTRIBUTES
      value: "host.ip=${NODE_IP}"
  config: |
    receivers:
      hostmetrics:
        collection_interval: 30s
        scrapers:
          cpu:
          load:


    extensions:
      health_check:
      zpages:
        endpoint: localhost:55679
      pprof:
        endpoint: localhost:1777

    processors:
      batch:
      memory_limiter:
        check_interval: 1s
        limit_percentage: 80
        spike_limit_percentage: 20
      resourcedetection/env:
        detectors: [env]
        timeout: 2s
        override: false

    exporters:
      debug:
      prometheusremotewrite:
        endpoint: "http://thanos-receive.observability.svc.cluster.local:19291/api/v1/receive"
        send_metadata: true
        tls:
          insecure: true

    service:
      telemetry:
        logs:
          level: "info"
        metrics:
          address: ${MY_POD_IP}:8888
      extensions: 
        - zpages
        - pprof
        - health_check
      pipelines:
        metrics:
          receivers: 
            - hostmetrics
          processors: 
            - memory_limiter
            - resourcedetection/env
            - batch
          exporters:
            - prometheusremotewrite